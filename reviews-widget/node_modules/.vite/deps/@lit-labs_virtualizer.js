import {
  RangeChangedEvent,
  VisibilityChangedEvent,
  defaultKeyFunction,
  defaultRenderItem,
  virtualize,
  virtualizerRef
} from "./chunk-GTEZYL2F.js";
import {
  LitElement,
  defaultConverter,
  notEqual
} from "./chunk-JJYZUI7H.js";
import "./chunk-RMSEGTBR.js";
import {
  html
} from "./chunk-4QYCOPDF.js";
import "./chunk-PZ5AY32C.js";

// node_modules/tslib/tslib.es6.mjs
function __decorate(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
}

// node_modules/@lit/reactive-element/development/decorators/property.js
var DEV_MODE = true;
var issueWarning;
if (DEV_MODE) {
  globalThis.litIssuedWarnings ?? (globalThis.litIssuedWarnings = /* @__PURE__ */ new Set());
  issueWarning = (code, warning) => {
    warning += ` See https://lit.dev/msg/${code} for more information.`;
    if (!globalThis.litIssuedWarnings.has(warning) && !globalThis.litIssuedWarnings.has(code)) {
      console.warn(warning);
      globalThis.litIssuedWarnings.add(warning);
    }
  };
}
var legacyProperty = (options, proto, name) => {
  const hasOwnProperty = proto.hasOwnProperty(name);
  proto.constructor.createProperty(name, options);
  return hasOwnProperty ? Object.getOwnPropertyDescriptor(proto, name) : void 0;
};
var defaultPropertyDeclaration = {
  attribute: true,
  type: String,
  converter: defaultConverter,
  reflect: false,
  hasChanged: notEqual
};
var standardProperty = (options = defaultPropertyDeclaration, target, context) => {
  const { kind, metadata } = context;
  if (DEV_MODE && metadata == null) {
    issueWarning("missing-class-metadata", `The class ${target} is missing decorator metadata. This could mean that you're using a compiler that supports decorators but doesn't support decorator metadata, such as TypeScript 5.1. Please update your compiler.`);
  }
  let properties = globalThis.litPropertyMetadata.get(metadata);
  if (properties === void 0) {
    globalThis.litPropertyMetadata.set(metadata, properties = /* @__PURE__ */ new Map());
  }
  if (kind === "setter") {
    options = Object.create(options);
    options.wrapped = true;
  }
  properties.set(context.name, options);
  if (kind === "accessor") {
    const { name } = context;
    return {
      set(v) {
        const oldValue = target.get.call(this);
        target.set.call(this, v);
        this.requestUpdate(name, oldValue, options);
      },
      init(v) {
        if (v !== void 0) {
          this._$changeProperty(name, void 0, options, v);
        }
        return v;
      }
    };
  } else if (kind === "setter") {
    const { name } = context;
    return function(value) {
      const oldValue = this[name];
      target.call(this, value);
      this.requestUpdate(name, oldValue, options);
    };
  }
  throw new Error(`Unsupported decorator location: ${kind}`);
};
function property(options) {
  return (protoOrTarget, nameOrContext) => {
    return typeof nameOrContext === "object" ? standardProperty(options, protoOrTarget, nameOrContext) : legacyProperty(options, protoOrTarget, nameOrContext);
  };
}

// node_modules/@lit-labs/virtualizer/LitVirtualizer.js
var LitVirtualizer = class extends LitElement {
  constructor() {
    super(...arguments);
    this.items = [];
    this.renderItem = defaultRenderItem;
    this.keyFunction = defaultKeyFunction;
    this.layout = {};
    this.scroller = false;
  }
  createRenderRoot() {
    return this;
  }
  render() {
    const { items, renderItem, keyFunction, layout, scroller } = this;
    return html`${virtualize({
      items,
      renderItem,
      keyFunction,
      layout,
      scroller
    })}`;
  }
  element(index) {
    var _a;
    return (_a = this[virtualizerRef]) == null ? void 0 : _a.element(index);
  }
  get layoutComplete() {
    var _a;
    return (_a = this[virtualizerRef]) == null ? void 0 : _a.layoutComplete;
  }
  /**
   * This scrollToIndex() shim is here to provide backwards compatibility with other 0.x versions of
   * lit-virtualizer. It is deprecated and will likely be removed in the 1.0.0 release.
   */
  scrollToIndex(index, position = "start") {
    var _a;
    (_a = this.element(index)) == null ? void 0 : _a.scrollIntoView({ block: position });
  }
};
__decorate([
  property({ attribute: false })
], LitVirtualizer.prototype, "items", void 0);
__decorate([
  property()
], LitVirtualizer.prototype, "renderItem", void 0);
__decorate([
  property()
], LitVirtualizer.prototype, "keyFunction", void 0);
__decorate([
  property({ attribute: false })
], LitVirtualizer.prototype, "layout", void 0);
__decorate([
  property({ reflect: true, type: Boolean })
], LitVirtualizer.prototype, "scroller", void 0);

// node_modules/@lit-labs/virtualizer/lit-virtualizer.js
customElements.define("lit-virtualizer", LitVirtualizer);
export {
  LitVirtualizer,
  RangeChangedEvent,
  VisibilityChangedEvent
};
/*! Bundled license information:

@lit/reactive-element/development/decorators/property.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@lit-labs/virtualizer/LitVirtualizer.js:
@lit-labs/virtualizer/lit-virtualizer.js:
  (**
   * @license
   * Copyright 2021 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)
*/
//# sourceMappingURL=@lit-labs_virtualizer.js.map
