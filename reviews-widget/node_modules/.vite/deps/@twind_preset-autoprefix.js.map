{
  "version": 3,
  "sources": ["../../@twind/src/index.ts"],
  "sourcesContent": ["import type { Preset } from '@twind/core'\n\nimport { cssPropertyAlias, cssPropertyPrefixFlags, cssValuePrefixFlags } from 'style-vendorizer'\n\nconst CSSPrefixFlags = [\n  ['-webkit-', 1 << 0], // 0b001\n  ['-moz-', 1 << 1], // 0b010\n  ['-ms-', 1 << 2], // 0b100\n] as const\n\nexport default function presetAutoprefix(): Preset {\n  return ({ stringify }) => ({\n    stringify(property, value, context) {\n      let cssText = ''\n\n      // Resolve aliases, e.g. `gap` -> `grid-gap`\n      const propertyAlias = cssPropertyAlias(property)\n      if (propertyAlias) cssText += stringify(propertyAlias, value, context) + ';'\n\n      // Prefix properties, e.g. `backdrop-filter` -> `-webkit-backdrop-filter`\n      const propertyFlags = cssPropertyPrefixFlags(property)\n      const valueFlags = cssValuePrefixFlags(property, value)\n\n      for (const prefix of CSSPrefixFlags) {\n        if (propertyFlags & prefix[1]) {\n          cssText += stringify(prefix[0] + property, value, context) + ';'\n        }\n\n        if (valueFlags & prefix[1]) {\n          cssText += stringify(property, prefix[0] + value, context) + ';'\n        }\n      }\n\n      /* Include the standardized declaration last */\n      /* https://css-tricks.com/ordering-css3-properties/ */\n      return cssText + stringify(property, value, context)\n    },\n  })\n}\n"],
  "mappings": ";;;;;;;;AAIA,IAAMA,iBAAiB;EACrB;IAAC;IAAY;;;EACb;IAAC;IAAS;;;EACV;IAAC;IAAQ;;;AAGI,SAASC,mBAA2B;AACjD,SAAO,CAAC,EAAEC,UAAS,OAAQ;IACzBA,UAAUC,UAAUC,OAAOC,SAAS;AAClC,UAAIC,UAAU,IAGRC,gBAAgBC,EAAiBL,QAAAA;AACnCI,wBAAeD,WAAWJ,UAAUK,eAAeH,OAAOC,OAAAA,IAAW;AAGzE,UAAMI,gBAAgBC,EAAuBP,QAAAA,GACvCQ,aAAaC,EAAoBT,UAAUC,KAAAA;AAEjD,eAAWS,UAAUb,gBAAgB;AAC/BS,wBAAgBI,OAAO,CAAA,MACzBP,WAAWJ,UAAUW,OAAO,CAAA,IAAKV,UAAUC,OAAOC,OAAAA,IAAW;AAG3DM,qBAAaE,OAAO,CAAA,MACtBP,WAAWJ,UAAUC,UAAUU,OAAO,CAAA,IAAKT,OAAOC,OAAAA,IAAW;MAEjE;AAIA,aAAOC,UAAUJ,UAAUC,UAAUC,OAAOC,OAAAA;IAC9C;;AAEJ;",
  "names": ["CSSPrefixFlags", "presetAutoprefix", "stringify", "property", "value", "context", "cssText", "propertyAlias", "cssPropertyAlias", "propertyFlags", "cssPropertyPrefixFlags", "valueFlags", "cssValuePrefixFlags", "prefix"]
}
